on:
  push:
    branches: main
  pull_request:
    branches: main

name: R CMD Check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'devel'}
          - {os: macOS-latest, r: 'release'}
          - {os: windows-latest, r: 'devel'}
          - {os: windows-latest, r: 'release'}
          - {os: windows-latest, r: 'oldrel'}
          - {os: ubuntu-20.04, r: 'devel'}
          - {os: ubuntu-20.04, r: 'release'}
          - {os: ubuntu-20.04, r: 'oldrel'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_DONTTEST_EXAMPLES_: false
      SPECIESPLUS_TOKEN: ${{ secrets.SPECIESPLUS_TOKEN }}
      CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v2
      
      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@pak1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck
          
      - uses: r-lib/actions/check-r-package@v1
#        with:
#          args: '"--as-cran"'

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash
          
      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'ubuntu-20.04' && matrix.config.r == 'release'
        run: |
          install.packages(c("remotes", "covr"))
          covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}